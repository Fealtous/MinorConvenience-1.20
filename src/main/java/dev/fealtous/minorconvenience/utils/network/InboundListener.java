package dev.fealtous.minorconvenience.utils.network;

import dev.fealtous.minorconvenience.convenience.experiments.ExperimentsHandler;
import io.netty.channel.ChannelHandler;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.SimpleChannelInboundHandler;
import net.minecraft.client.Minecraft;
import net.minecraft.network.protocol.Packet;
import net.minecraft.network.protocol.game.*;
import net.minecraftforge.common.ForgeConfig;
import net.minecraftforge.event.network.ConnectionStartEvent;
import net.minecraftforge.eventbus.api.listener.SubscribeEvent;
import net.minecraftforge.fml.config.ConfigTracker;
import net.minecraftforge.fml.loading.FMLEnvironment;

@ChannelHandler.Sharable
public class InboundListener extends SimpleChannelInboundHandler<Packet> {
    public static Minecraft mc = Minecraft.getInstance();
    private static InboundListener instance = null;
    public InboundListener() {
        super(false);
        instance = this;
    }
    @Override
    protected void channelRead0(ChannelHandlerContext ctx, Packet msg) throws Exception {
        // Reduce log spam, shouldn't cause any issues?
        if (msg instanceof ClientboundPlayerInfoUpdatePacket pkt) {
            if (pkt.actions().contains(ClientboundPlayerInfoUpdatePacket.Action.UPDATE_LATENCY)) {
                return;
            }
        } else if (msg instanceof ClientboundSetPassengersPacket pkt) {
            if (mc.level != null) {
                if (mc.level.getEntity(pkt.getVehicle()) == null) return;
            }
        } else if (ExperimentsHandler.inExperiments && msg instanceof ClientboundContainerSetSlotPacket pkt) {
            ExperimentsHandler.handleChronoUpdate(pkt.getItem(), pkt.getSlot());
        }
        ctx.fireChannelRead(msg);
    }

    @SubscribeEvent
    public static void onConnect(ConnectionStartEvent e) {
        new InboundListener();
        if (!FMLEnvironment.production) { // damn you hypixel why do you make me do these things.
            String fixedName = "forge-server.toml";
            byte[] fixedConfig = new byte[]{35, 83, 101, 114, 118, 101, 114, 32, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 32, 115, 101, 116, 116, 105, 110, 103, 115, 13, 10, 91, 115, 101, 114, 118, 101, 114, 93, 13, 10, 9, 35, 83, 101, 116, 32, 116, 104, 105, 115, 32, 116, 111, 32, 116, 114, 117, 101, 32, 116, 111, 32, 114, 101, 109, 111, 118, 101, 32, 97, 110, 121, 32, 66, 108, 111, 99, 107, 69, 110, 116, 105, 116, 121, 32, 116, 104, 97, 116, 32, 116, 104, 114, 111, 119, 115, 32, 97, 110, 32, 101, 114, 114, 111, 114, 32, 105, 110, 32, 105, 116, 115, 32, 117, 112, 100, 97, 116, 101, 32, 109, 101, 116, 104, 111, 100, 32, 105, 110, 115, 116, 101, 97, 100, 32, 111, 102, 32, 99, 108, 111, 115, 105, 110, 103, 32, 116, 104, 101, 32, 115, 101, 114, 118, 101, 114, 32, 97, 110, 100, 32, 114, 101, 112, 111, 114, 116, 105, 110, 103, 32, 97, 32, 99, 114, 97, 115, 104, 32, 108, 111, 103, 46, 32, 66, 69, 32, 87, 65, 82, 78, 69, 68, 32, 84, 72, 73, 83, 32, 67, 79, 85, 76, 68, 32, 83, 67, 82, 69, 87, 32, 85, 80, 32, 69, 86, 69, 82, 89, 84, 72, 73, 78, 71, 32, 85, 83, 69, 32, 83, 80, 65, 82, 73, 78, 71, 76, 89, 32, 87, 69, 32, 65, 82, 69, 32, 78, 79, 84, 32, 82, 69, 83, 80, 79, 78, 83, 73, 66, 76, 69, 32, 70, 79, 82, 32, 68, 65, 77, 65, 71, 69, 83, 46, 13, 10, 9, 114, 101, 109, 111, 118, 101, 69, 114, 114, 111, 114, 105, 110, 103, 66, 108, 111, 99, 107, 69, 110, 116, 105, 116, 105, 101, 115, 32, 61, 32, 102, 97, 108, 115, 101, 13, 10, 9, 35, 83, 101, 116, 32, 116, 104, 105, 115, 32, 116, 111, 32, 116, 114, 117, 101, 32, 116, 111, 32, 114, 101, 109, 111, 118, 101, 32, 97, 110, 121, 32, 69, 110, 116, 105, 116, 121, 32, 40, 78, 111, 116, 101, 58, 32, 68, 111, 101, 115, 32, 110, 111, 116, 32, 105, 110, 99, 108, 117, 100, 101, 32, 66, 108, 111, 99, 107, 69, 110, 116, 105, 116, 105, 101, 115, 41, 32, 116, 104, 97, 116, 32, 116, 104, 114, 111, 119, 115, 32, 97, 110, 32, 101, 114, 114, 111, 114, 32, 105, 110, 32, 105, 116, 115, 32, 116, 105, 99, 107, 32, 109, 101, 116, 104, 111, 100, 32, 105, 110, 115, 116, 101, 97, 100, 32, 111, 102, 32, 99, 108, 111, 115, 105, 110, 103, 32, 116, 104, 101, 32, 115, 101, 114, 118, 101, 114, 32, 97, 110, 100, 32, 114, 101, 112, 111, 114, 116, 105, 110, 103, 32, 97, 32, 99, 114, 97, 115, 104, 32, 108, 111, 103, 46, 32, 66, 69, 32, 87, 65, 82, 78, 69, 68, 32, 84, 72, 73, 83, 32, 67, 79, 85, 76, 68, 32, 83, 67, 82, 69, 87, 32, 85, 80, 32, 69, 86, 69, 82, 89, 84, 72, 73, 78, 71, 32, 85, 83, 69, 32, 83, 80, 65, 82, 73, 78, 71, 76, 89, 32, 87, 69, 32, 65, 82, 69, 32, 78, 79, 84, 32, 82, 69, 83, 80, 79, 78, 83, 73, 66, 76, 69, 32, 70, 79, 82, 32, 68, 65, 77, 65, 71, 69, 83, 46, 13, 10, 9, 114, 101, 109, 111, 118, 101, 69, 114, 114, 111, 114, 105, 110, 103, 69, 110, 116, 105, 116, 105, 101, 115, 32, 61, 32, 102, 97, 108, 115, 101, 13, 10, 9, 35, 83, 101, 116, 32, 116, 104, 105, 115, 32, 116, 111, 32, 116, 114, 117, 101, 32, 116, 111, 32, 99, 104, 101, 99, 107, 32, 116, 104, 101, 32, 101, 110, 116, 105, 114, 101, 32, 101, 110, 116, 105, 116, 121, 39, 115, 32, 99, 111, 108, 108, 105, 115, 105, 111, 110, 32, 98, 111, 117, 110, 100, 105, 110, 103, 32, 98, 111, 120, 32, 102, 111, 114, 32, 108, 97, 100, 100, 101, 114, 115, 32, 105, 110, 115, 116, 101, 97, 100, 32, 111, 102, 32, 106, 117, 115, 116, 32, 116, 104, 101, 32, 98, 108, 111, 99, 107, 32, 116, 104, 101, 121, 32, 97, 114, 101, 32, 105, 110, 46, 32, 67, 97, 117, 115, 101, 115, 32, 110, 111, 116, 105, 99, 101, 97, 98, 108, 101, 32, 100, 105, 102, 102, 101, 114, 101, 110, 99, 101, 115, 32, 105, 110, 32, 109, 101, 99, 104, 97, 110, 105, 99, 115, 32, 115, 111, 32, 100, 101, 102, 97, 117, 108, 116, 32, 105, 115, 32, 118, 97, 110, 105, 108, 108, 97, 32, 98, 101, 104, 97, 118, 105, 111, 114, 46, 32, 68, 101, 102, 97, 117, 108, 116, 58, 32, 102, 97, 108, 115, 101, 46, 13, 10, 9, 102, 117, 108, 108, 66, 111, 117, 110, 100, 105, 110, 103, 66, 111, 120, 76, 97, 100, 100, 101, 114, 115, 32, 61, 32, 102, 97, 108, 115, 101, 13, 10, 9, 35, 84, 104, 101, 32, 112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 104, 97, 110, 100, 108, 101, 114, 32, 117, 115, 101, 100, 32, 98, 121, 32, 116, 104, 101, 32, 115, 101, 114, 118, 101, 114, 46, 32, 68, 101, 102, 97, 117, 108, 116, 115, 32, 116, 111, 32, 102, 111, 114, 103, 101, 58, 100, 101, 102, 97, 117, 108, 116, 95, 104, 97, 110, 100, 108, 101, 114, 32, 105, 102, 32, 110, 111, 32, 115, 117, 99, 104, 32, 104, 97, 110, 100, 108, 101, 114, 32, 119, 105, 116, 104, 32, 116, 104, 97, 116, 32, 110, 97, 109, 101, 32, 105, 115, 32, 114, 101, 103, 105, 115, 116, 101, 114, 101, 100, 46, 13, 10, 9, 112, 101, 114, 109, 105, 115, 115, 105, 111, 110, 72, 97, 110, 100, 108, 101, 114, 32, 61, 32, 34, 102, 111, 114, 103, 101, 58, 100, 101, 102, 97, 117, 108, 116, 95, 104, 97, 110, 100, 108, 101, 114, 34, 13, 10, 9, 35, 83, 101, 116, 32, 116, 104, 105, 115, 32, 116, 111, 32, 116, 114, 117, 101, 32, 116, 111, 32, 101, 110, 97, 98, 108, 101, 32, 97, 100, 118, 101, 114, 116, 105, 115, 105, 110, 103, 32, 116, 104, 101, 32, 100, 101, 100, 105, 99, 97, 116, 101, 100, 32, 115, 101, 114, 118, 101, 114, 32, 116, 111, 32, 108, 111, 99, 97, 108, 32, 76, 65, 78, 32, 99, 108, 105, 101, 110, 116, 115, 32, 115, 111, 32, 116, 104, 97, 116, 32, 105, 116, 32, 115, 104, 111, 119, 115, 32, 117, 112, 32, 105, 110, 32, 116, 104, 101, 32, 77, 117, 108, 116, 105, 112, 108, 97, 121, 101, 114, 32, 115, 99, 114, 101, 101, 110, 32, 97, 117, 116, 111, 109, 97, 116, 105, 99, 97, 108, 108, 121, 46, 13, 10, 9, 97, 100, 118, 101, 114, 116, 105, 115, 101, 68, 101, 100, 105, 99, 97, 116, 101, 100, 83, 101, 114, 118, 101, 114, 84, 111, 76, 97, 110, 32, 61, 32, 116, 114, 117, 101, 13, 10};
            ConfigTracker.INSTANCE.fileMap().get(fixedName).acceptSyncedConfig(fixedConfig);
        }
        e.getConnection().channel().pipeline().addBefore("packet_handler", InboundListener.class.getName(), instance);
        e.getConnection().channel().pipeline().addBefore("packet_handler", OutboundListener.class.getName(), new OutboundListener());
    }
}
